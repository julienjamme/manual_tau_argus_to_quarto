## Meta data files
The meta data plays a vital role in $\tau$-Argus. The meta data is alwaysspecified and stored in a separate file. As $\tau$-Argus can read bothmicro data as input as tabular data, the meta data descriptions willbe different as well. Nevertheless there are many similarities,especially between meta data for fixed and free format micro data.
The meta data can always be changed/adapted/entered via the menu itemSpecify\|Metadata, see sections [4.4.1],[4.4.2] and [4.4.3].
As no standard meta data system is available which is powerful enoughto manage the complete metadata specification necessary forStatistical Disclosure Control we had to develop something speciallyfor $\tau$-Argus.
The metadata file (default extension .RDA) has globally the samestructure for all the different file types that can be handled by$\tau$-Argus. i.e fixed format/free format microdata, SPSS system files ortabular data.
For each variable the name is specified followed by its position inthe file and possible missing values. Following this specificationadditional information can be specified. These specifications alwaysstart with a keyword enclosed by "\<"and"\>" followed by thespecifications.
The metadata is always stored in a plain text file without any tabs orso. If you wish you could enter/modify the metadata file with e.g.Notepad, but not with Word. It is then your own risk that the metadatais syntactically correct. $\tau$-Argus will check the meta data file whenit is read, but to a certain limit. The best way is to modify themetadata via the τ‑argus program.
Files mentioned in meta-files are assumed to reside in the samedirectory as the meta-file. If not, the complete directory-path shouldbe specified.
We will first describe in section [5.1.1]the meta datafile a fixed format micro data file. In the subsequent sections thespecial issues for the other file formats (free format and SPSS) willbe described. In section [5.1.4] the meta data fortabular data files will be dscribed.

### Meta data for fixed format micro data 
For fixed format for each variable the starting position and the fieldlength have to be specified. Also the possible missing values must bespecified as well as the role that a variable can play in theSDC-analysis, like spanning variable (also known as explanatoryvariable), cell item, weight, etc. Additional extra specifications canbe entered. as well, like codelists and hierarchical structures.
The metafile describes the variables in the microdata file, both therecord layout and some additional information necessary to perform theSDC-process. Each variable is specified on one main line followed byone or more option lines.
The first line gives the name of the variable followed by the startingposition for each record, the width of the field and optionally one ortwo missing value indicators for the record. Missing values are notrequired in $\tau$-Argus, but they can play a role when deciding whether ornot a cell is unsafe.
For fixed format microdata it is not necessary to specify all thevariables in the file. Only the variables used in τ‑argus have to bespecified. When reading the data τ‑argus will ignore the fields notdescribed. This will improve the speed of processing.
The following lines explain specific characteristics of the variable:

+--------------------------+------------------------------------------+
| -   \<RECODEABLE\>       | > This variable can be recoded and used  |
|                          | > as an explanatory variable in a table  |
+--------------------------+------------------------------------------+
| -   \<CODELIST\>         | > This explanatory (or spanning)         |
|                          | > variable can have an associated        |
|                          | > codelist which gives labels to the     |
|                          | > codes for this particular variable.    |
|                          | > The name of the codelist file follows  |
|                          | > this \<CODELIST\> command. The default |
|                          | > extension is .CDL. See section         |
|                          | > [5.3]                     |
+--------------------------+------------------------------------------+
| -   \<NUMERIC\>          | > This numeric variable can be used as   |
|                          | > cell-item.                             |
+--------------------------+------------------------------------------+
| -   \<DECIMALS\>         | > The number of decimal places specified |
|                          | > for this variable                      |
+--------------------------+------------------------------------------+
| -   \<WEIGHT\>           | > This variable contains the weighting   |
|                          | > scheme                                 |
+--------------------------+------------------------------------------+
| -   \<HIERARCHICAL\>     | > This variable is hierarchical. The     |
|                          | > codings are structured so that there   |
|                          | > is a top code such as Region (N,S,E,W) |
|                          | > and within each of these are smaller   |
|                          | > more specific areas (and possibly      |
|                          | > sub-areas). Tables may be viewed at    |
|                          | > different levels of hierarchy.         |
+--------------------------+------------------------------------------+
| -   \<HIERLEVELS\>       | > The hierarchy is derived from the      |
|                          | > digits of the codes itself. The        |
|                          | > specification is followed by a list of |
|                          | > integers denoting the width of each    |
|                          | > level. The sum of these integers       |
|                          | > should be the width of the total code. |
|                          | > An example is shown beneath the rda    |
|                          | > file below.                            |
+--------------------------+------------------------------------------+
| -   \<HIERCODELIST\>     | > The name of the file describing the    |
|                          | > hierarchical structure. Default        |
|                          | > extension .HRC. See section            |
|                          | > [5.2].                    |
+--------------------------+------------------------------------------+
| -   \<HIERLEADSTRING\>   | > The string/character that is used to   |
|                          | > indicate the depth of a code in the    |
|                          | > hierarchy***.*** See section           |
|                          | > [5.2]                     |
+--------------------------+------------------------------------------+
| -   \<REQUEST\>          | > This variable contains the status      |
|                          | > denoting whether or not a respondent   |
|                          | > asked for protection                   |
+--------------------------+------------------------------------------+
| -   \<HOLDING\>          | > This variable contains the indication  |
|                          | > whether a group of records belong to   |
|                          | > the same group/holding                 |
+--------------------------+------------------------------------------+
Here is an example of a rda file for microdata. (Note, the dots at thebottom just means that here a shortened version of the file ispresented.)
YEAR 1 2 99
\<RECODEABLE\>
IndustryCode 4 5 99999
\<RECODEABLE\>
\<HIERARCHICAL\>
\<HIERLEVELS\> 3 1 1 0 0
Size 9 2 99
\<RECODEABLE\>
Region 12 2 99
\<RECODEABLE\>
\<CODELIST\> Region.cdl
\<HIERCODELIST\> Region2.hrc
\<HIERLEADSTRING\> @
\<HIERARCHICAL\>
Wgt 14 4
\<NUMERIC\>
\<DECIMALS\> 1
\<WEIGHT\>
Var1 19 9 999999999
\<NUMERIC\>
Var2 28 10 9999999999
\<NUMERIC\>
\<DECIMALS\> 2
............
Explanation of the details of the variables
*'Year'*: For this explanatory/spanning variable each record begins onposition 1, is 2 characters long and missing values are represented by99. It is also recodeable implicitly stating that it is an explanatoryor spanning variable used to create the tables.
*'IndustryCode'*: For this variable each record begins on position 4and is 5 characters long. Missing values are represented by 99999. Aswell as being recodeable this variable is hierarchical and thehierarchy structure is specified. The first 3 characters are in thetop hierarchy level, the 4^th^ character in the second level and the5^th^ character in the lowest level. As 'Industry' is a 5 digitvariable there are 5 digits specified for the hierarchical structure.This is the reason for the 2 zeros at the end.
*'Size':* For this variable each record begins on position 9 and is 2characters long, and missing values are represented by 99. It is alsorecodeable.
*'Region'*: For this variable each record begins on position 12 and is2 characters long. Missing values are represented by 99. Region has acodelist. See section [5.3]. Region is also ahierarchical variable. As the hierarchical structure cannot be derivedfrom the structure of the coding scheme itself the hierarchicalstructure is described in a special .HRC file. See section[5.2]. The hierarchical structure is described with anindentation structure. Therefore the indentation character(HIERLEADSTRING) has to be specified. Here an @ was chosen.
*'Wgt'*: For this variable each record begins on position 14 and is 4characters in length. There is 1 decimal place for these values andthe variable is defined as a weight. A missing value is not allowedhere.
Two numeric variables are also shown in the above rda file. Thesenumeric variables (not defined as weights) are those to be used ascell items *i.e.* response variables used in creating the table.
*'Var1'*: This variable begins on position 19 and is 9 characterslong. Missing values are represented by 999999999 and it is numeric.However the missing values for numerical variables will be ignored.The missing values problem should have been solved by e.g. imputationtechniques, but it is outside of the scope of τ‑argus.
*'Var2'*: This variable begins on position 28 and is 10 characterslong. Missing values are represented by 9999999999 and it is numeric.This variable has 2 decimal places.
The representation in an rda file for the Request rule and HoldingIndicator are shown here for completeness.
Request rule
Request 99 1
\<REQUEST\> \"1\" \"2\"
Here the request indicator is in column 99 and is one character long.Individuals (or companies) wishing to make use of this rule arerepresented by 1 or 2, Any other value will be interpreted as 'norequest'. Two different parameters-sets for the request rule can bespecified, the first set will be applied to the companies where thefirst code has been specified, the second set to the companies withthe second code. The request rule is further explained in section[4.4.4].
This rule is used in foreign trade statistics and based on a specialregulation..
Holding Indicator
entgroup 101 4
\<HOLDING\>
Here the variable 'entgroup' is in column 101 and is four characterslong. This variable is to act as the holding indicator (see section4.3.1 for further explanation). The records of a holding should begrouped together in the input datafile. $\tau$-Argus will not searchthrough the whole file to try to find all records for a holding.Before applying the sensitivity rules all records of one holding aregrouped together and treated as one contribution.

### Meta data for free format micro data 
For a free-format datafile the RDA is a little bit different. Notablythe first line specifies the separator used. This indicates to $\tau$-Argusthat the record description is for a free-format file. And for eachvariable the starting position is no longer specified, as this ismeaningless in a free-format datafile. For the rest there are nodifferences compared to the fixed format version. The example givenabove for a fixed format file will now looks as:
\<SEPARATOR\> \",\"
YEAR 2 99
\<RECODEABLE\>
Sbi 5 99999
\<RECODEABLE\>
\<HIERARCHICAL\>
\<HIERLEVELS\> 3 1 1 0 0
GK 2 99
\<RECODEABLE\>
Regio 2 99
\<RECODEABLE\>
\<CODELIST\> REGION.CDL
\<HIERARCHICAL\>
\<HIERCODELIST\> region2.hrc
\<HIERLEADSTRING\> @
Wgt 4 9999
\<NUMERIC\>
\<DECIMALS\> 1
\<WEIGHT\>
Var1 9 999999999
\<NUMERIC\>
Var2 10 9999999999
\<NUMERIC\>
\<DECIMALS\> 2
..
..

### Meta data for SPSS system files
When the microdata is stored in a SPSS System file $\tau$-Argus can alsoread this data. However some special rules have to be taken intoaccount. It is assumed that a valid license for SPSS is available onthe computer, because $\tau$-Argus will call SPSS to read the data from thesystemfile. Also part of the metadata will be retrieved from SPSS.However not all meta data needed for τ‑argus is available in SPSS, sothe user has to enter the additional metadata himself. See section[4.4.2]
In fact $\tau$-Argus will call SPSS to export the data and will create afixed format scratch file in the temp-directory. After that τ‑arguswill work similar to working with fixed format ASCII files.
The first time you open a SPSS systemfile, no metadata file can andhas to be specified.
After opening the SPSS system file in this menu option SPSS will becalled and the meta data (Variable names, field length, missingvalues) available in SPSS will be read. This is a process that takes abit of time and should not be interrupted by pressing any key or so.However no progress information can be showed on the screen.
If you reopen an SPSS system file with a meta data file, $\tau$-Argus willcheck whether all the variables in the RDA file are really availablein the system file.
The RDA file is very similar to the RDA file for a fixed format ASCIIfile. One exception is that the first line will read
\<SPSS\>

### Meta data for tabular data files
When a tabular datafile has been selected, the metadata file will havea different structure. Clicking on 'Specify\|Metafile' gives theopportunity to either edit the metafile already read in or to enterthe metafile information directly at the computer.
As tabular input is always expected to be free format, first theseparator has to be specified.
The variables can have the following role:

+--------------------------------+------------------------------------+
| -   \<RECODEABLE\>             | > The spanning variables used to   |
|                                | > produce the table. The same as   |
|                                | > for microdata input files, like  |
|                                | > hierarchical structures and      |
|                                | > codelist                         |
+--------------------------------+------------------------------------+
| -   \<TOTCODE\>                | > Code for the total of a codelist |
+--------------------------------+------------------------------------+
| -   \<NUMERIC\>                | > Response Variable -- The         |
|                                | > variable used to calculate the   |
|                                | > cell total.                      |
+--------------------------------+------------------------------------+
| -   \<NUMERIC\> \<SHADOW\>     | > Shadow variable -- The variable  |
|                                | > is used as a shadow variable.    |
+--------------------------------+------------------------------------+
| -   \<NUMERIC\> \<COST\>.      | > Cost variable -- The variable is |
|                                | > used as the cost-variable        |
+--------------------------------+------------------------------------+
| -   \<NUMERIC\> \<LOWERPL\>    | > Lower protection level -- The    |
|                                | > lower protection level           |
+--------------------------------+------------------------------------+
| -   \<NUMERIC\> \<UPPERPL\>    | > Upper protection level -- The    |
|                                | > upper protection level           |
+--------------------------------+------------------------------------+
| -   \<FREQUENCY\>.             | > Frequency -- This indicates the  |
|                                | > number of observations making up |
|                                | > the cell total. If there is no   |
|                                | > frequency variable each cell is  |
|                                | > assumed to consist of a single   |
|                                | > observation                      |
+--------------------------------+------------------------------------+
| -   \<MAXSCORE\>               | > 'topN variable' -- This shows if |
|                                | > this variable is defined as one  |
|                                | > of the top N contributors to the |
|                                | > cell. The pre-defined value for  |
|                                | > TopN is 1. The first variable    |
|                                | > declared as 'topN' will contain  |
|                                | > the largest values in each cell, |
|                                | > the second variable so declared  |
|                                | > will contain the second largest  |
|                                | > values etc.                      |
+--------------------------------+------------------------------------+
| -   \<STATUS\>                 | > \>'Status Indicator' -- allows a |
|                                | > variable in the left-hand pane   |
|                                | > to be declared as a Status       |
|                                | > Indicator. Typically cells can   |
|                                | > be declared as Safe, Unsafe or   |
|                                | > Protected                        |
+--------------------------------+------------------------------------+
| -   \<SAFE\>                   | > The code used for indicating     |
|                                | > that a cell is safe              |
+--------------------------------+------------------------------------+
| -   \<UNSAFE\>                 | > The code used for indicating     |
|                                | > that a cell is unsafe            |
+--------------------------------+------------------------------------+
| -   \<PROTECT\>                | > The code used for indicating     |
|                                | > that a cell is protected and     |
|                                | > cannot be used for secondary     |
|                                | > suppression                      |
+--------------------------------+------------------------------------+
For explanatory variables the code for the total has to be specified.We recommend strongly that the user also provides the values for thetotals himself, but if needed he can ask $\tau$-Argus to compute thesetotals. In any case, $\tau$-Argus needs these totals as they play animportant role is the structure of a table and also are important forthe suppression models.
\<SEPARATOR\> ","
\<SAFE\> s
\<UNSAFE\> u
\<PROTECT\> p
expvar1
\<RECODABLE\>
\<TOTCODE\> T
expvar2
\<RECODABLE\>
\<TOTCODE\> T
respvar
\<NUMERIC\>
freq
\<FREQUENCY\>
top1
\<MAXSCORE\>
top2
\<MAXSCORE\>
top3
\<MAXSCORE\>
stat
\<STATUS\>

