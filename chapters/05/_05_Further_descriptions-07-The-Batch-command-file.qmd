## The Batch command file
$\tau$-Argus has originally been designed as an interactive program. Acomplete menu-driven design guides you through all steps of theprocess. However a growing need for a batch version emerged afterthat. Since then $\tau$-Argus has been extended with a batch version. Thebatch commands are stored in a separate text-file. These commands canbe executed from the command line or via the menu (File\|Open Batchprocess. See section [4.3.4].
Alternatively the batch file can be used in a real batch environmentas well. Just invoke $\tau$-Argus with the command
Taupath\\TAUARGUS param1 param2 param3 param4
where Taupath is the name of the directory where you installed$\tau$-Argus, param1 is the name of the file with batch commands; seebelow. Param2 is optional, and is the name of the logfile. If omitted$\tau$-Argus will write a logbook in the file logbook.txt in thetemp-directory. See also section [5.8]. Param3 is theparameter specifying the temp-directory. If omitted the defaulttemp-directory will be used. Param4 specifies the batch datadirectory.
When using $\tau$-Argus interactively a batch file can be generated via themenu Output\|Write Batch file. See section [4.6.4]. Butwe advise you to inspect the results of this action before using thisgenerated batch-file as certain details might have been omitted.
Layout of the batch-file
A file can be written in a text editor and called from this command.Lines starting with "//" will be considered as comment and will beignored.
Files mentioned in batch-file are assumed to reside in the samedirectory as the batch-file. If not, the complete directory-pathshould be specified.
The possible commands are shown here.

+-----------------+---------------------------------------------------+
| > Command       | > Parameters                                      |
+-----------------+---------------------------------------------------+
| > LOGBOOK       | > Name of the logbook file; If not specified the  |
|                 | > default logbook file will be used.              |
+-----------------+---------------------------------------------------+
| > COMMENT       | > Just a comment for your convenience.            |
|                 |                                                   |
|                 | > This is equal to starting a line with //        |
+-----------------+---------------------------------------------------+
| > OPENMICRODATA | > Data file name with microdata                   |
+-----------------+---------------------------------------------------+
| > OPENTABLEDATA | > File name containing tabular data               |
+-----------------+---------------------------------------------------+
| > OPENMETADATA  | > Metadata file name                              |
+-----------------+---------------------------------------------------+
| > SPECIFYTABLE  | >                                                 |
|                 | \"ExpVar1\"\"ExpVar2\"\"ExpVar3\"\|\"RespVar\"\|\ |
|                 | > \"ShadowVar\"\|\"Costvar\"\|Lambda              |
|                 |                                                   |
|                 | > For frequency tables you can specify \<FREQ\>   |
|                 | > as Response Variable                            |
|                 |                                                   |
|                 | > ShadowVar, Costvar and Lambda are optional. If  |
|                 | > not specified then ShadowVar, Costvar equal the |
|                 | > Response Variable. For lambda the default is 1. |
|                 |                                                   |
|                 | > If the cost variable is specified either a      |
|                 | > numerical variable can be specified or '-1' is  |
|                 | > chosen for frequency or '-2' for unity or -3    |
|                 | > for the distance function.                      |
|                 |                                                   |
|                 | > (See section [4.4.4] for the        |
|                 | > explanation for the use of lambda)              |
+-----------------+---------------------------------------------------+
| > CLEAR         | > Clears all and starts a new session.            |
+-----------------+---------------------------------------------------+
| > SAFETYRULE    | > This command is used for primary suppression.   |
|                 |                                                   |
|                 | > All these parameters are described in the       |
|                 | > section Specify tables, [4.4.4]     |
|                 |                                                   |
|                 | > A set of safety rule specifications separated   |
|                 | > by a "\|"                                       |
|                 |                                                   |
|                 | > Each safety spec starts with \"P\", \"NK\"      |
|                 | > \"ZERO\", \"FREQ\", \"REQ\",\"WGT\",\"MIS\" or  |
|                 | > \"MAN\" and between brackets the parameters     |
|                 |                                                   |
|                 | > **P**: (p,n) with the n optional. (default =    |
|                 | > 1). So (20,3)ïƒ¨. A p% rule with p=20% and n=3    |
|                 |                                                   |
|                 | > **NK: (**n,k**).** A n,k-dominance rule****     |
|                 | > ****with n = the size of the coalition and k    |
|                 | > the max. percentage.****                        |
|                 |                                                   |
|                 | > **ZERO**: (ZeroSafetyRange)                     |
|                 |                                                   |
|                 | > **FREQ**:(MinFreq, FrequencySafetyRange)        |
|                 |                                                   |
|                 | > **REQ**: (Percent1, Percent2, SafetyMargin)     |
|                 |                                                   |
|                 | > All rules can appear several times,             |
|                 |                                                   |
|                 | > The first two **P, NK** are for the individual  |
|                 | > level; the following two for the holding level, |
|                 |                                                   |
|                 | > The first **FREQ** and **REQ** are at the       |
|                 | > individual level the second one is for the      |
|                 | > holding.                                        |
|                 |                                                   |
|                 | > **ZERO**, the zero safety range parameter, can  |
|                 | > be given only once for each safety rule.        |
|                 |                                                   |
|                 | > **MIS**: 0 = cells with a missing code are      |
|                 | > unsafe if the safety-rules are violated; 1 =    |
|                 | > these cells are always safe. (Default = 0.)     |
|                 |                                                   |
|                 | > **WGT**: 0 no weights are used, 1 = apply       |
|                 | > weights for computing the tables and in the     |
|                 | > safety rules Default = 0                        |
|                 |                                                   |
|                 | > **MAN**: (Manual safety margin). This margin is |
|                 | > used e.g. of a table with only the status is    |
|                 | > read, or if via the apriori option a cell is    |
|                 | > set to manually unsafe. The default value = 20. |
+-----------------+---------------------------------------------------+
| > READMICRODATA | > Just reads the microdata file and calculates    |
|                 | > the table(s), no parameters are required        |
+-----------------+---------------------------------------------------+
| > READTABLE     | > Just reads the tabular inputfile;               |
|                 |                                                   |
|                 | > If the only parameter = 1 the "compute missing  |
|                 | > totals" procedure will be used.                 |
|                 |                                                   |
|                 | > If the parameter = 2 then non-additivity will   |
|                 | > be allowed.\                                    |
|                 | > But this might cause problems in the further    |
|                 | > process.                                        |
|                 |                                                   |
|                 | > Default: do not compute the missing totals. But |
|                 | > an error will be reported if the totals are not |
|                 | > correct.                                        |
+-----------------+---------------------------------------------------+
| > APRIORI       | > This reads an a-priori file                     |
|                 |                                                   |
|                 | > The parameters are: Filename, Table number, the |
|                 | > separator, IgnoreError, ExpandTrivial           |
|                 |                                                   |
|                 | > The Separator should now be enclosed in         |
|                 | > double-quotes                                   |
|                 |                                                   |
|                 | > IgnoreError: if 1 then lines causing an error   |
|                 | > will be ignored.                                |
|                 |                                                   |
|                 | > ExpandTrivial: if 1 then a line will be applied |
|                 | > to all trivial levels in the hierarchy; see     |
|                 | > also section [5.6]                 |
+-----------------+---------------------------------------------------+
| > SUPPRESS      | > This command applies the secondary suppression. |
|                 |                                                   |
|                 | > The possible options are:                       |
|                 |                                                   |
|                 | > GH: Hypercube                                   |
|                 |                                                   |
|                 | > MOD: Modular                                    |
|                 |                                                   |
|                 | > OPT: Optimal                                    |
|                 |                                                   |
|                 | > NET: Network                                    |
|                 |                                                   |
|                 | > RND: Controlled rounding                        |
|                 |                                                   |
|                 | > CTA: Controlled Tabular Adjustment              |
|                 |                                                   |
|                 | > The parameters are a few parameters between     |
|                 | > brackets; The first parameter is always the     |
|                 | > table number.                                   |
|                 |                                                   |
|                 | > **GH**(TabNo, A priori Bounds Percentage,       |
|                 | > ModelSize, ApplySingleton)                      |
|                 |                                                   |
|                 | > ModelSize 0 = normal, 1 indicates the large     |
|                 | > model.                                          |
|                 |                                                   |
|                 | > ApplySingleton: 1 = yes,0 = no; default = yes   |
|                 | > if the table has frequency-information, no if   |
|                 | > not.                                            |
|                 |                                                   |
|                 | > **MOD**(TabNo, MaxTimePerSubtable,              |
|                 | > SingleSingle, SingleMultiple, MinFreq)          |
|                 |                                                   |
|                 | > The last 3 parameters are the singleton         |
|                 | > options. Each parameter can be 0 or 1. If 1 the |
|                 | > option is activated.                            |
|                 |                                                   |
|                 | > **OPT**(TabNo, MaxComputingTime)                |
|                 |                                                   |
|                 | > **NET**(TabNo)                                  |
|                 |                                                   |
|                 | > **RND(**TabNo, RoundingBase, Steps, MaxTime,    |
|                 | > Partitions, StopRule**)**                       |
|                 |                                                   |
|                 | > **- **Steps: number of steps allowed, normally  |
|                 | > 0 (default)                                     |
|                 |                                                   |
|                 | > \- MaxTime: Max computing time (10 = default)   |
|                 |                                                   |
|                 | > \- Partitions: 0, 1 (0 = no partitioning        |
|                 | > (default), 1 = apply the partitioning           |
|                 | > procedure)                                      |
|                 |                                                   |
|                 | > \- StopRule: 1 = Rapid only, 2 = First feasible |
|                 | > solution, 3 = optimal solution (3 =default)     |
|                 |                                                   |
|                 | > **CTA**(TabNo)                                  |
+-----------------+---------------------------------------------------+
| > SOLVER        | > Indicate whether you will be using cplex,       |
|                 | > Xpress or the free solver. Only needed when the |
|                 | > type of solver has not yet been specified on    |
|                 | > the computer during a previous interactive      |
|                 | > session of $\tau$-Argus or if you want to use a      |
|                 | > different solver. The only parameter allowed is |
|                 | > cplex, xpress or free.                          |
|                 |                                                   |
|                 | > If you select cplex the name of the cplex       |
|                 | > licence file can be specified here. But if you  |
|                 | > have already made known this licence file to    |
|                 | > $\tau$-Argus in a previous session you can omit it   |
|                 | > here.                                           |
+-----------------+---------------------------------------------------+
| > WRITETABLE    | > TabNo, P1, P2,Filename                          |
|                 |                                                   |
|                 | > P1: Output type:                                |
|                 |                                                   |
|                 | > 1\. CVS-file                                    |
|                 |                                                   |
|                 | > 2\. CSV file for pivot table                    |
|                 |                                                   |
|                 | > 3\. Code, value file                            |
|                 |                                                   |
|                 | > 4\. SBS-output format                           |
|                 |                                                   |
|                 | > 5\. Intermediate file                           |
|                 |                                                   |
|                 | > 6\. JJ format file                              |
|                 |                                                   |
|                 | > P2: Options String. This string contains a      |
|                 | > series of 3 letter combinations, the first two  |
|                 | > are the option and the third one can only be +  |
|                 | > or -, indicating whether or not this option is  |
|                 | > selected or not                                 |
|                 |                                                   |
|                 | > The options are:                                |
|                 |                                                   |
|                 | > AR: write the audit results in an intermediate  |
|                 | > file                                            |
|                 |                                                   |
|                 | > AS: write additionally the status; i.e. do not  |
|                 | > replace the cell value by an x for unsafe       |
|                 | > cells, but give the value and a status          |
|                 | > indicator. This is a number between 1 and 14    |
|                 | > see section [4.6.1].\              |
|                 | > For CTA and rounding this means that the        |
|                 | > original and the modified value are written.    |
|                 |                                                   |
|                 | > FL: write variable names on the first line      |
|                 |                                                   |
|                 | > HI: write holding level information in an       |
|                 | > intermediate file                               |
|                 |                                                   |
|                 | > HL: write also the hierarchical levels in a SBS |
|                 | > file                                            |
|                 |                                                   |
|                 | > QU: embed codes in quotes                       |
|                 |                                                   |
|                 | > SE: Suppress empty cells                        |
|                 |                                                   |
|                 | > SO: write only the status in an intermediate    |
|                 | > file                                            |
|                 |                                                   |
|                 | > TR: remove trivial levels in the output file.   |
|                 |                                                   |
|                 | > *Note:* not all options can be used in all      |
|                 | > situations. Such options will simply be ignored |
|                 | > and do not cause an error. See the Save Table   |
|                 | > option in the interactive mode to see which     |
|                 | > options are valid in which situation or section |
|                 | > [4.6.1].                           |
+-----------------+---------------------------------------------------+
| > VERSIONINFO   | > Writes the version of Ï„â€‘argus to a file.        |
|                 |                                                   |
|                 | > The name of the file is the only parameter of   |
|                 | > this command. Warning: An existing file will be |
|                 | > overwritten.                                    |
+-----------------+---------------------------------------------------+
| > GOINTERACTIVE | > This will start the GUI of Ï„â€‘argus and allows   |
|                 | > to continue interactively.                      |
|                 |                                                   |
|                 | > However if you start the batch file             |
|                 | > interactively from the menu of Ï„â€‘ argus you     |
|                 | > will always end in the GUI.                     |
+-----------------+---------------------------------------------------+
A typical batch file would look like this: (note that everything aftera // will be treated as comment)
Example of a batch file using micro data
//datafile
\<OPENMICRODATA\> \"C:\\Program Files\\TauARGUS\\data\\tau_testW.asc\"
//metafile
\<OPENMETADATA\> \"C:\\Program Files\\TauARGUS\\data\\tau_testW.rda\"
//Exp\|resp\|shadow\|cost -1=unit -2=freq -3=dist
\<SPECIFYTABLE\> \"Size\"\"region\"\|\"var2\"\|\"var3\"\|\"var3\"
\<SAFETYRULE\> P(15,3)\|FREQ(3,20)\|ZERO(10)
\<SPECIFYTABLE\> \"Size\"\"Year\"\|\"var2\"\|\"var3\"\|\"var3\"
\<SAFETYRULE\> NK(3,70)\|FREQ(3,20)\|ZERO(20)
\<READMICRODATA\>
\<SUPPRESS\> GH(1,75)
\<WRITETABLE\> (1,1,AS+,\"D:\\TauJava3\\Datata\\x1.csv\")
\<SUPPRESS\> GH(2,75)
\<WRITETABLE\> (2,2,QU+,\"D:\\TauJava3\\Datata\\y11.csv\")
\<SUPPRESS\> MOD(1)
\<WRITETABLE\> (1,3,AS-,\"D:\\TauJava3\\Datata\\x20.txt\")
\<SUPPRESS\> MOD(2)
\<WRITETABLE\> (2,4,SE+,\"D:\\TauJava3\\Datata\\y20.tab\")
\<SUPPRESS\> OPT(1,5)
\<WRITETABLE\> (1,1,AS+,\"D:\\TauJava3\\Datata\\x3.csv\")
\<GOINTERACTIVE\>
Eample of a batch file using tabular data
\<OPENTABLEDATA\> \"E:\\TauArgusVB\\Datata\\Nace3Size.tab\"
\<OPENMETADATA\> E:\\TauArgusVB\\Datata\\Nace3Size.RDA\"
\<SPECIFYTABLE\>\"IndustryCode\"\"Size\"\|\"Var2\"\|\"Var2\"\|\"Var2\"
//\<SAFETYRULE\>
\<READTABLE\>
\<SUPPRESS\> MOD(1)
\<WRITETABLE\> (1,3,3,\"E:\\TauArgusVB\\Datata\\Nace3SizeSafe.txt\")
\<GOINTERACTIVE\>
In the above example the \<SAFETYRULE\> command was disabled as inthis example it is assumed that that table already contains the statusof each cell. However if the tabular input contains more information(frequency, TopN) the safety rule command could easily be used here aswell.
If more than one table has to be processed, the \<CLEAR\> commandcould make a new start in a session.

