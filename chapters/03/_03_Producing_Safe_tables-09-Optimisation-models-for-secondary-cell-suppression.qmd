## Optimisation models for secondary cell suppression^[^10]^
τ-argus applies different approaches to find optimal and near-optimalsolutions. One of these approaches is based on a MathematicalProgramming technique which consists of solving Integer LinearProgramming programs modelling the combinatorial problems underdifferent methodologies (Cell Suppression and Controlled Rounding).The main characteristic of these models is that they share the samestructure, thus based only on a 0-1 variable for each cell. In theCell Suppression methodology, the variable is 1 if and only if thecell value must be suppressed. In the Controlled Rounding methodology,the variable is 1 if and only if the cell value must be rounded up. Noother variables are necessary, so the number of variables in the modelis exactly the number of cells in the table to be protected. Inaddition, the model also imposes the protection level requirements(upper, lower and sliding) in the same way for the differentmethodologies (Cell Suppression and Controlled Rounding). Theserequirements ask for a guarantee that an attacker will not get toonarrow an interval of potential values for a sensitive cell, whichhe/she will compute by solving two linear programming programs (calledattacker problems). Even if a first model containing this two-attackerproblem would lead to a bi-level programming model, complex to besolved in practice, a Benders\' decomposition approach allows us toconvert the attacker problems into a set of linear inequalities. Thisconversion provides a second model for each methodology that can beefficiently solved by a modern cutting-plane approach. Since thevariables are 0-1, a branching phase can be necessary, and the wholeapproach is named \"branch-and-cut algorithm\".
Branch-and-cut algorithms are modern techniques in Operations Researchthat provide excellent results when solving larger and complicatedcombinatorial problems arising in many applied fields (like routing,scheduling, planning, telecomunications, etc.). Shortly, the idea isto solve a compact 0-1 model containing a large number of linearinequalities (as the ones above mentioned for the Cell Suppression andfor the Controlled Rounding) through an iterative procedure that doesnot consider all the inequalities at the same time, but generates theimportant ones when needed. This dynamic procedure of dealing withlarge models allows the program to replace the resolution of a hugelarge model by a short sequence of small models, which is termed a\"decomposition approach\". The on-line generation of the linearinequalities (rows) was also extended in this work to the variables(columns), thus the algorithm can also works on tables with a largenumber of cells, and the overall algorithm is named\"branch-and-cut-and-price\" in the Operations Research literature.
To obtain good performance, the implementation has also consideredmany other ingredients, standard in branch-and-cut-and-priceapproaches. For example, it is fundamentally the implementation of apre-processing approach where redundant equations defining the tableare eliminated, where variables associated to non-relevant cells areremoved, and where dominated protection levels are detected. Thepre-processing is fundamental to make the problem as small as possiblebefore starting the optimization phase. Another fundamental ingredientis the heuristic routine, which allows the algorithm to start with anupper bound of the optimal loss of information. This heuristic routineensures the production of a protected pattern if the algorithm isinterrupted by the user before the end. In other words, thanks to theheuristic routine, the implemented algorithm provide a near-optimalsolution if the execution is cancelled before having a proof ofoptimality. During the implicit enumeration approach (i.e., thebranch-and-cut-and-price) the heuristic routine is called severaltimes, thus providing different protected patterns, and the best onewill be the optimal solution if its loss of information is equal tothe lower bound. This lower bound is computed by solving a relaxedmodel, which consists of removing the integrability condition on theinteger model. Since the relaxed model is a linear program, a linearprogramming solver must be called.
We have not implemented our own linear programming solver, but used acommercial solver which is already tested by other programmers formany years. A robust linear programming solver is a guarantee that nonumerical trouble will appear during the computation.
That is the reason to requires either cplex (from ILOG) or Xpress(from FICO). Because the model to be solved can be applied to all typeof table structures (2-dim, 3-dim, 4-dim, etc), including hierarchicaland linked tables, we cannot use special simplex algorithmimplementations, like the min-cost flow computation which wouldrequired to work with tables that can be modelled as a network (e.g.,2-dimensional tables or collections of 2-dim tables linked by onelink). On this special table, ad-hoc approaches (solving network flowsor short path problems) could be implemented to avoid using generallinear programming solvers.
Since τ‑argus has been transformed to an open source project we havealso included an open source solver Soplex as an alternative forXpress and cplex. We have obtained a licence that is included in thesoftware that grants to the European National Statistical Institutes anon-exclusive, non-transferable, non-sub-licensable, perpetual rightto use Soplex version 2.0.x and SCIP version 3.1.x, linked to theτ‑argus software. This enables you to use the τ‑argus software withoutbuying a licence for the commercial solvers. However it should benoted that commercial solvers are more powerful and might be needed tosolve larger instances.

