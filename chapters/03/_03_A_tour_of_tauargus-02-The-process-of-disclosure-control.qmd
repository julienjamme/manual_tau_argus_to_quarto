## The process of disclosure control {#sec-processdisclosure}

When the table(s) have been calculated, the main-window of $\tau$-Arguswill show the (first) table.

![](Media/Pictures/1000000000000399000002AFC81A9D2E.png){width=13cm height=9.696cm}

Safe cells are shown in black, whilst cells failing the safety ruleand/or minimum frequency rule are displayed in red.

Only the top 2 levels of a hierarchy are shown initially. But at the bottom of the window there are options to open more levels. Also clicking on the \'+\' before a code will open a level of the hierarchy. In the example we have opened the $3^{rd}$ level of the region variable.

The user now has to decide whether to carry out secondary suppressions immediately or to perform some recoding first. There are other options such as changing the status of individual cells manually, this will be discussed further in the Reference chapter (see @sec-viewtable).

### Cell information

Cells can be selected in the table by clicking with the cursor on a specific cell. In that case, information about the selected cell is shown on the right top part of the window.

The status of the cell can be one of the following. Some of the terms will be explained later in this section but others are expanded upon in the Reference @sec-viewtable.

-   Safe: Does not violate the safety rule

-   Safe (from manual): manually made safe during this session

-   Unsafe: According to the safety rule

-   Unsafe (request): Unsafe according to the Request rule.

-   Unsafe (frequency): Unsafe according to the minimum frequency rule.

-   Unsafe (zero cell) Unsafe because the zero-cells are considered unsafe.

-   Unsafe (from manual): Manually made unsafe during this session.

-   Protected: Cannot be selected as a candidate for secondary cell suppression.

-   Secondary: Cell selected for secondary suppression.

-   Secondary (from manual): Unsafe due to secondary suppression after primary suppressions carried out manually.

-   Zero: Value is zero and cannot be suppressed.

-   Empty: No records contributed to this cell and the cell cannot be suppressed.

### Change Status 

The second pane ('Change Status') on the right will allow the user tochange the cell--status.

-   Set to Safe: A cell, which has failed the safety rules, can be declared safe by the user.

-   Set to Unsafe: A cell, which has passed the safety rules, can be declared to be unsafe by the user.

-   Set to Protected: A safe cell is set so that it cannot be selected for secondary suppression.

-   Set Cost: Change the value of the Cost-value for this cell

-   Use \'a priori\' information (see below).

### A Priori Info

This option is an *a priori* option to be mainly used for microdata which allows the user to feed $\tau$-Argus a list of cells where the status of the standard rules can be overruled i.e. the status of the cells is already specified. The associated file specifying this information is free format. The format will be:

Code of first spanning variable, Code of second spanning variable,Status of cell (u = unsafe, p = protected (not to be suppressed),s = safe).

Also the cost-function can be changed here for a cell. This will make the cell more likely to become secondary cell suppression, when the value is low or less likely when the value is high.

![](Media/Pictures/apriori_info_file_3211.png)

<!--
Nr, 4, u
Zd, 6, p
5, 5, c, 1
-->

A full description of the aproiri file can be found in @sec-apriorifile.

### Recode

The recode button will bring the user to the recoding system. Recodingis a very powerful method of protecting a table. Collapsed cells usually have more contributors and therefore tend to be much safer.

#### Hierarchical Recoding

The first window shows the variables available for recoding.

In this example, the 'Region' variable has been selected for recoding. As 'Region' is a hierarchical variable, the codes are shown in a hierarchical tree. The user can either fold or unfold the branches by clicking on the '+' or '-' boxes which results in showing or omitting codes from the table, or by choosing an overall maximum hierarchical level. (See the following windows for details). Pressing the 'Apply 'button followed by 'Close' will actually apply the selected recoding and show the resulting table. Press the undo-button -- it is now possible to go back to the original recoding scheme. Below this there are two windows, one showing the recode window prior to applying there coding for the hierarchical variable 'Region' and the second after the folding of the tree.

![](Media/Pictures/100000000000025C000002278C10BCB1.png){width=13cm height=11.716cm}

The next window shows the new hierarchical codes after collapsing all second level categories.

![](Media/Pictures/100000000000025C0000017155E7F1A3.png){width=13cm height=7.941cm}

By clicking \'Apply\' and \'Close\', we go back to the main windowwhich shows the table after recoding:

![](Media/Pictures/100000000000039B000002A87499D80A.png){width=13cm height=9.696cm}

#### Non Hierarchical Recoding

In this example the non-hierarchical 'Size' variable has been selected to be recoded. The user can either write the required recodings in the edit box or import them from a previously written file. In the example the line 2:2-6 results that categories $2,3,4,5,$ and $6$ will be recoded into a new category $2$. Note that $\tau$-Argus will give a warning that some codes have not been recoded. They will remain unchanged. The user will know whether this is harmful or not.

![](Media/Pictures/1000000000000295000002273BA54BDE.png){width=13cm height=11.529cm}

Once the recoding has been applied (both for hierarchical and non hierarchical data) the table can again be displayed. If there are now no cells, which fail the safety rules, the table can be saved as a protected table. However, if there are still anumber of unsafe cells, secondary suppression needs to be carried out. This is necessary as the table is not yet safe. If only the cells failing the safety rules are suppressed, other cell values could be obtained by differencing.

### Secondary Suppression

The Suppress button is an important button. It will activate the modules for computing the necessary secondary suppressions as described above. There are a number of options here:

-   Hypercube

-   Modular

-   Network

-   Optimal
  
#### Hypercube

This is also known as the ghmiter method. The approach builds on the fact that a suppressed cell in a simple *n*‑dimensional table without substructure cannot be disclosed exactly if that cell is contained in a pattern of suppressed, non zero cells, forming the corner points of a hypercube.

#### Modular

This partial method will break the hierarchical table down to several non-hierarchical tables, protect them and compose a protected table from the smaller tables. As this method uses the optimisationroutines, an LP-solver is required: this will be either Xpress or [cplex]{.smallcaps}, or the free solver The routine used can be specified in the Options window, this will be discussed later.

#### Optimal

This method protects the hierarchical table as a single table without breaking it down into smaller tables. As this method uses the optimisation routines, an LP-solver is required: this will be either Xpress or [cplex]{.smallcaps}. The routine used can be specified in the Options window; see @sec-helpoptions.

#### Network

This is a Network Flow approach for large unstructured 2 dimensional tables or a 2 dimensional table with one hierarchy (the first variable specified). This method is also based on optimisation techniques, butdoes not require an external solver like Xpress or [cplex]{.smallcaps}.
As alternatives for cell suppression we can also apply rounding and Controlled Tabular Adjustment (CTA)

#### Rounding

The controlled rounding procedure can be applied. The user has to specify the rounding base. Note that this option requires the Xpress solver or the [cplex]{.smallcaps} solver or the free solver. See @sec-controlledrounding425

#### Controlled Tabular Adjustment (CTA)

This method will modify a table such that the unsafe cells are replaced by their upper or lower protection level and the remaining cells are modified such that the table is still additive. See @sec-CTA424

#### Choose the suppression method

The radio-buttons at the right lower part of the window allow selecting the desired suppression method. Clicking on the Suppress button will then start the process of calculating the secondary suppressions. When this process has finished the protected table will be displayed and also the user will be informed about the number of cells selected for secondary suppression and the time taken to perform the operation. The secondary suppressed cells will be shown in blue.

![](Media/Pictures/100000000000039C000002B6944CDCBE.png){width=13cm height=9.696cm}

### Summary Window

By clicking on \'Table Summary\', the summary window is obtained. The summary window gives an overview of the cells according to their status.

-   Freq: The number of cells in each category

-   \# rec: The number of observations in each category

-   Sum Resp: Total cell value in each category

-   SumCost: The sum of the cost variable. Here it is equal to the response variable.
  

![](Media/Pictures/100000000000026700000177020B6D1D.png){width=13cm height=7.976cm}

By clicking on \'Close\', we return to the table window.

The table can now be written to an output file in the required format. Any cells which have been selected for suppression will be replaced by\'X\', unless another option is chosen. The safe table can be saved by using \'Output\|Save table\' menu on the main menu. See @sec-outputsavetable.

